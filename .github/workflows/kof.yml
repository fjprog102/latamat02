name: King of Tokyo

on:
  push:
    paths:
      - 'KOF/**'

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        dotnet-version: ['6.0.x' ]
    steps:
      - uses: actions/checkout@v3
      - name: Setup dotnet
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '6.0.x'
      - name: Restore tools
        run: dotnet tool restore --tool-manifest KOF/.config/dotnet-tools.json
      - name: Build
        run: dotnet build KOF/
      - name: Check format issues
        run: dotnet format --verify-no-changes -v d KOF/
      - name: Run tests
        run: dotnet test KOF/ -l html --collect:"XPlat Code Coverage" --results-directory "TestResults-${{ matrix.dotnet-version }}"
      - name: Upload test results
        uses: actions/upload-artifact@v3
        with:
          name: test-results-${{ matrix.dotnet-version }}
          path: TestResults-${{ matrix.dotnet-version }}
        # Use always() to always run this step to publish test results when there are test failures
        if: ${{ always() }}
      - name: Generate code coverage report
        run: cd KOF/; dotnet reportgenerator -reports:"../TestResults-${{ matrix.dotnet-version }}/**/*.cobertura.xml" -targetdir:".coveragereport"
      - name: Upload code coverage report
        uses: actions/upload-artifact@v3
        with:
          name: code-coverage-${{ matrix.dotnet-version }}
          path: KOF/.coveragereport
        # Use always() to always run this step to publish test results when there are test failures
        if: ${{ always() }}
